# Runs two docker linters
---
name: 'DockerLinting'
on:  # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      aws_account_id:
        type: 'string'
        required: true
      dockerfile_folder:
        type: 'string'
        default: '.'
        required: true
      hado_ignores:
        type: 'string'
        default: 'DL3006 DL3008 DL3018'
        required: false
      action_ref:
        type: 'string'
        default: 'main'
        required: false
      ecr_registry:
        type: 'string'
        required: true
      docker_image_tag:
        type: 'string'
        required: true
    secrets:
      ci_token:
        required: true
      twistlock_key_id:
        required: true
      twistlock_key:
        required: true
      aws_region:
        required: true
      aws_access_key_id:
        required: true
      aws_access_key:
        required: true

jobs:
  Hadolint:
    name: 'Hadolint'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v2'

      - name: 'Checkout GitHub actions repo'
        uses: 'actions/checkout@v2'
        with:
          repository: 'novu/github-actions'
          token: '${{ secrets.ci_token }}'
          path: '.github-actions'
          ref: '${{ inputs.action_ref }}'

      - name: 'Run Hadolint'
        uses: './.github-actions/hadolint'
        env:
          GITHUB_TOKEN: '${{ secrets.ci_token }}'
          HADOLINT_ACTION_DOCKERFILE_FOLDER: '${{ inputs.dockerfile_folder }}'
          HADOLINT_ACTION_IGNORES: '${{ inputs.hado_ignores }}'

  Twistlock_Scan:
    name: 'Twistlock (Non-Blocking) Build and Scan for Vulnerabilities and Compliance'
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'

      - name: 'Configure AWS credentials'
        uses: 'aws-actions/configure-aws-credentials@v1'
        with:
          aws-access-key-id: '${{ secrets.aws_access_key_id }}'
          aws-secret-access-key: '${{ secrets.aws_access_key }}'
          aws-region: '${{ secrets.aws_region }}'

      - name: 'Login to Amazon ECR'
        id: 'login-ecr'
        uses: 'aws-actions/amazon-ecr-login@v1'

      - name: 'Prisma Cloud image scan'
        id: 'scan'
        uses: 'PaloAltoNetworks/prisma-cloud-scan@v1'
        with:
          pcc_console_url: 'https://us-east1.cloud.twistlock.com/us-1-111575341'
          pcc_user: '${{ secrets.twistlock_key_id }}'
          pcc_pass: '${{ secrets.twistlock_key }}'
          image_name: '${{ inputs.aws_account_id }}.dkr.ecr.${{ secrets.aws_region }}.amazonaws.com/${{ inputs.ecr_registry }}:${{ inputs.docker_image_tag }}'
