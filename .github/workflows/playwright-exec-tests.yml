---
  name: 'Playwright E2E Tests'
  on:
    workflow_call:
      inputs:
        shared_ecr_repository:
          type: string
          required: true
        service_name:
          type: string
          required: true
        environment:
          type: string
          required: false
          default: tst
        output_path:
          type: string
          required: false
          default: test-output
        app_workdir:
          type: string
          required: false
          default: /app
      secrets:
        AWS_REGION:
          required: true
        AWS_ACCESS_KEY_ID:
          required: true
        AWS_SECRET_ACCESS_KEY:
          required: true
        ROLE_TO_ASSUME:
          required: true
  
  env:
    PW_TEST_HTML_REPORT_OPEN: 'never'
  
  jobs:
    set-runner:
      runs-on: ubuntu-latest
      outputs:
        runner-group: ${{ steps.set-group.outputs.runner-group }}
      steps:
        - id: set-group
          run: |
            if [ "${{ inputs.environment }}" = "prgconf" ]; then
              echo "runner-group=dhp-tst1-runner" >> $GITHUB_OUTPUT
            else
              echo "runner-group=dhp-${{ inputs.environment }}1-runner" >> $GITHUB_OUTPUT
            fi
    e2e-tests:
      needs: set-runner
      name: 'playwright-test'
      environment: ${{ inputs.environment }}
      runs-on:
        group: ${{ needs.set-runner.outputs.runner-group }}
      container:
        image: 062864719408.dkr.ecr.us-east-1.amazonaws.com/${{ inputs.shared_ecr_repository }}:${{ inputs.service_name }}-latest
        volumes:
        - ./${{ inputs.output_path }}:${{ inputs.app_workdir }}/${{ inputs.output_path }}
      steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-skip-session-tagging: true
            role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}
        - name: Run Maven tests
          run: |
            cd ${{ inputs.app_workdir }} && mvn test
        - name: Upload test-output as artifact
          uses: actions/upload-artifact@v4
          with:
            name: test-output
            path: ${{ inputs.output_path }}
